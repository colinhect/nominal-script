f := [
  a := [ 0, 1, 2 ]
  b := a:
  b
]
assert_equal: (f:) 2

f = [
  f := [ 2 ]
  g := [ f: + 3 ]
  g:
]
assert_equal: (f:) 5

f = [
  c := {
    f := [ 23 ],
    g := [ 19 ]
  }
  c.f: + c.g:
]
assert_equal: (f:) 42

f = [
  e := {
    f := [
      [ 23 ]
    ]
  }
  e.f::
]
assert_equal: (f:) 23

f = [
  x := 1
  y := 3
  w := [
    x := 4
    x + y
  ]:
  w + x
]
assert_equal: (f:) 8

assert_equal: ([ 1 ]:) 1
assert_equal: (([ 1 ]):) 1
assert_equal: ([ 1, 2, 3 ]:) 3
assert_equal: ([ 1, 2, 3, { 4, 5 } ]:[1]) 5
assert_equal: (([ 1, 2, 3, { 4, 5 } ]:)[1]) 5
assert_equal: (-[[[[42]]]]::::) -42
assert_equal: ([ { 0, 1, [ 7 + 3 ] } ]:[2]:) 10
assert_equal: ([ { zero := 0, one := 1, two := 2 } ]:.one) 1

completed := true
