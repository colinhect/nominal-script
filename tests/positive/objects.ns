Cat := class: "Cat"
assert_equal: Cat.name "Cat"

Cat.new := [ name |
  object: Cat {
    name := name
  }
]

Cat.lastMeow := { cat := nil, expression := nil }

Cat.meow := [ self expression |
  Cat.lastMeow.cat = self
  Cat.lastMeow.expression = expression
]

-- Invoke the constructor explicitly
janks := Cat.new: "Janks"
assert_equal: (class_of: janks) Cat
assert_equal: janks.name "Janks"

-- Invoke the constructor implicitly
svedka := Cat: "Svedka"
assert_equal: (class_of: svedka) Cat
assert_equal: svedka.name "Svedka"

assert_equal: Cat.lastMeow.cat nil
assert_equal: Cat.lastMeow.expression nil

-- Explicit class method invocation
(class_of: janks).meow: janks "Hiss"
assert_equal: Cat.lastMeow.cat janks
assert_equal: Cat.lastMeow.expression "Hiss"

-- Implicit class method invocation
svedka..meow: "P'meuw"
assert_equal: Cat.lastMeow.cat svedka
assert_equal: Cat.lastMeow.expression "P'meuw"

completed := true
